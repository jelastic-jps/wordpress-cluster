type: install
jpsVersion: '1.7.2'
name: WordPress Cluster Multiregion
id: wordpress-cluster-multiregion
categories:
  - apps/clusters
  - apps/content-management
description: 
  text: WordPress Cluster Kit with built-in choice of servers, database clustering and scaling mode to create optimal environment for highly-loaded projects. The package provides integrated autoscaling and high availability for development and production environments. Clustered topology ensures effective handling of heavy workload.
  short: WordPress Cluster with built-in kit for choosing optimal servers, database clustering type, scaling mode and a set of advanced features for highly-loaded projects
logo: /images/wp-cluster-kit.png
baseUrl: https://raw.githubusercontent.com/jelastic-jps/wordpress-cluster/v3.0.0

onBeforeInit: /scripts/settings.js?_r=${fn.random}
onBeforeInstall: /scripts/beforeinstall.js?_r=${fn.random}

skipNodeEmails: true
nodes: definedInOnBeforeInstall

settings:
  fields:
    - caption: Scaling Strategy
      type: list
      name: loadGrowth
      default: slow
      required: true
      width: 225
      tooltip: | 
        Configure auto-scaling triggers, i.e. how fast the system responds to load spikes by adding or removing nodes.
        <p>Read more about <a href="https://docs.jelastic.com/automatic-horizontal-scaling" target='_blank'>Automatic Horizontal Scaling</a></p>
      values:        
        - value: slow
          caption: Low Load
          tooltip: <h2>Low load scaling strategy</h2>add 1 new node when CPU > 70% <p>remove when CPU < 20%</p>
        - value: medium
          caption: Medium Load
          tooltip: <h3>Medium load scaling strategy</h3>add 1 new node when CPU > 50% <p>remove when CPU < 20%</p>
        - value: fast
          caption: High Load
          tooltip: <h3>High load scaling strategy</h3>add 2 new nodes when CPU > 30% <p>remove when CPU < 10%</p>
  
    - caption: Advanced Features
      type: displayfield
      name: displayfield
      markup:
 
    - caption: Install LiteSpeed High-Performance Web Server (Additional License Fee)
      type: checkbox
      name: ls_addon
      value: true
      disabled: false
      tooltip: "If this option is disabled, the cluster will be installed using NGINX load balancer and application servers. More info about LiteSpeed <a href='https://docs.jelastic.com/litespeed-web-server/' target='_blank'>here</a>"
      showIf:
        true:
          - caption: WordPress Brute Force Attack Protection
            type: checkbox
            name: wp_protect
            value: true
            disabled: false
            tooltip: "Secure WordPress Admin Panel with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:config:wordpress-protection' target='_blank'>LiteSpeed Brute Force Protection</a> that limits failed login attempts. Default action is <b>Throttle</b> and number of allowed attempts is <b>100</b>"

          - caption: Web Application Firewall
            type: checkbox
            name: waf
            value: true
            disabled: false
            tooltip: "Protect web sites with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:waf' target='_blank'>LiteSpeed built-in WAF</a> based on Free ModSecurity Rules from Comodo"

        false:
          - caption: WordPress Brute Force Attack Protection
            type: checkbox
            name: wp_protect
            value: false
            disabled: true
            tooltip: "Secure WordPress Admin Panel with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:config:wordpress-protection' target='_blank'>LiteSpeed Brute Force Protection</a> that limits failed login attempts. Default action is <b>Throttle</b> and number of allowed attempts is <b>100</b>"
        
          - caption: Web Application Firewall
            type: checkbox
            name: waf
            value: false
            disabled: true
            tooltip: "Protect web sites with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:waf' target='_blank'>LiteSpeed built-in WAF</a> based on Free ModSecurity Rules from Comodo"
      
    - caption: Install MariaDB Galera Cluster
      type: checkbox
      name: galera
      value: true
      disabled: false
      tooltip: "<h3>Requirements for All Tables:</h3> * run on InnoDB storage engine <p>* have a primary key</p>Read more about <a href='https://mariadb.com/kb/en/library/mariadb-galera-cluster-known-limitations/' target='_blank'>limitations</a>"
      
    - caption: Install GlusterFS Cluster
      type: checkbox
      name: glusterfs
      value: true
      disabled: false
       
    - caption: Install Let's Encrypt SSL with Auto-Renewal
      type: checkbox
      name: le_addon
      value: false
      disabled: true

    - caption: Install Lightning-Fast Premium CDN with 160+ PoPs
      type: checkbox
      name: cdn_addon
      value: true
      disabled: false

    - caption: Install WordPress Multisite Network
      type: checkbox
      name: mu_addon
      value: false
      disabled: false

    - type: displayfield
      hideLabel: true
      hidden: true
      name: bl_count   
      value: 2
      markup:
      
globals:
  path: ${baseUrl}
  db_user: jelastic-${fn.random}
  db_pass: ${fn.password(10)}
  db_host: sqldb
  protocol: http
  wp_admin_pass: ${fn.password(10)}
  ls_admin_pass: ${settings.ls_admin_pass}
  success: success
  email: default
  is_install_wp: ${settings.is_install_wp:true}
  db_async_topology: ${settings.db_async_topology:false}

onAfterScaleOut[nodeGroup:bl]:
  - forEach(event.response.nodes):
      - setupBL:
          nodeId: ${@i.id}
  - forEach(nodes.bl): 
      sudo jem service restart
  
onAfterScaleOut[nodeGroup:cp]:
  - forEach(event.response.nodes):
    - log: Mount Storage
    - api:
      - method: jelastic.environment.file.AddMountPointById
        params:
          nodeId: ${@i.id}
          sourceNodeId: ${nodes.storage.master.id}
          sourcePath: /data
          path: /var/www/webroot/ROOT
          sourceAddressType: NODE_GROUP
          protocol: NFS4
    - log: App Servers Setup
    - setupCP:
        nodeId: ${@i.id}
        nodeIP: ${@i.address}
 
onBeforeAddNode[sqldb]:
  stopEvent:
    type: warning
    message: Scaling is not supported for database cluster.

onBeforeRemoveNode[sqldb]:
  stopEvent:
    type: warning
    message: Scaling is not supported for database cluster.

onBeforeAddNode[storage]:
  stopEvent:
    type: warning
    message: Scaling is not supported for storage.

onBeforeRemoveNode[storage]:
  stopEvent:
    type: warning
    message: Scaling is not supported for storage.

onBeforeStop:
  - cmd[cp]: service autofs stop;
    user: root

onInstall:

  - if ('${globals.is_install_wp}' == 'true'):
    - script: |
        return {
          result:0,
          ssl: jelastic.billing.account.GetQuotas('environment.jelasticssl.enabled').array[0].value
        }
    - if (${response.ssl}):
        setGlobals:
          protocol: https

    - script: /scripts/idna.js
    - setGlobals:
        domain: ${response.domain}
  - mountStorage

  - if (${settings.is_trigger:true}):
    - log: Auto Scaling Triggers
    - script: "/scripts/addTriggers.js"
      nodeGroup: cp
      resourceType: CPU
      loadGrowth: ${settings.loadGrowth}
      cleanOldTriggers: true
      scaleDownLimit: ${nodes.cp.length}
    
  - if (${settings.le_addon:false}):
      - setGlobals:
          protocol: https
  
  - setupBL:
      nodeId: bl
  
  - if (/litespeed/.test("${nodes.cp.nodeType}")):
    - cmd[bl]: |-
        jem balancer clear;
        jem balancer rebuildCommon;
      user: root

  - forEach(i:nodes.cp):
      setupCP:
        nodeId: ${@i.id}
        nodeIP: ${@i.address}

  - if ('${globals.is_install_wp}' == 'true'):
    - install-wordpress
    - if (${settings.mu_addon:false}): configure-MU
    - if (${settings.le_addon:false}): 
      - install-LE-addon
      - setup-LE-domain
      - addHSTS:  
          nodeId: cp
    - if (${settings.cdn_addon:false}): install-edgeport-CDN

addons:
  - id: cache-clean
    type: update
    name: WordPress Cache Cleaner
    description: Clean all cache for all clusters of multiregion topology.
    logo: https://raw.githubusercontent.com/jelastic-jps/wordpress-cluster/v2.0.0/images/wp_logo_70.png
    buttons:
      - caption: Cache clean
        action: cache-clean
        loadingText: Cleaning...
        confirmText: Do you want to cache clean?
        successText:  Cache for multiregion cluster has been successfully cleaned!
        
    env:
      onAfterClone:
        - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
        - install [bl, cp]: ${response.jps}
          envName: ${event.response.env.envName}

  - id: setup-site-url
    type: update
    name: WordPress Site Address (URL)
    description: The Site Address(URL) setting is the address you want people to type in their browser to reach your WordPress blog.
    logo: https://raw.githubusercontent.com/jelastic-jps/wordpress-cluster/v3.0.0/images/wp_logo_70.png
    settings:
      fields:
        - type: string
          name: siteURL
          caption: Site Address (URL)
          default: ''
          required: true
          regex: "^https?:\\/\\/.+$"
          regexText: Incorrect Site URL.

    buttons:
      - caption: Site URL
        settings: main
        action: setup-domain
        loadingText: Applying...
        confirmText: Do you want to change Site URL?
        successText:  Site URL for WordPress has been successfully applyed!
        
    env:
      onAfterClone:
        - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
        - install [bl, cp]: ${response.jps}
          envName: ${event.response.env.envName}


actions:

  cache-clean:
    - install: https://raw.githubusercontent.com/jelastic-jps/wordpress-multiregions/master/scripts/cacheManager.jps?_r=${fn.random}
      settings:
        clean_cache: true

  install-LE-addon:
    - install: https://github.com/jelastic-jps/lets-encrypt/blob/master/manifest.jps?_r=${fn.random}
      nodeGroup: bl
      skipEmail: true
      settings:
        customDomains: ${globals.domain}
        fallbackToX1: true

  setup-LE-domain:
    - cmd[${nodes.bl.master.id}]: source /opt/letsencrypt/settings && echo $domain
    - install: ${globals.PATH}/scripts/setupDomain.jps
      settings:
        domain: https://${response.out}

  setup-domain:
    - install: https://raw.githubusercontent.com/jelastic-jps/wordpress-cluster/v3.0.0//scripts/setupDomain.jps
      settings:
        domain: ${settings.siteURL}

  install-edgeport-CDN:
    - install: https://raw.githubusercontent.com/edgeport/cdn/master/manifest.yml?_r=${fn.random}
      nodeGroup: bl
      skipEmail: true
      settings:
        note: ${settings.noteCDN:}
    - script: return jelastic.dev.scripting.Eval("c05ffa5b45628a2a0c95467ebca8a0b4", session, "cdn.info", {partnerCode:1})
    - setGlobals:
        CDN_URL: ${globals.protocol}://${env.envName}-${response.response.partnerCode}.cdn.edgeport.net/
        CDN: ${env.envName}-${response.response.partnerCode}.cdn.edgeport.net
        SUCCESS: success-cdn
        EMAIL: cdn
    - install: /scripts/setupCDN.jps

  configure-MU:
    - install: ${globals.PATH}/addon/WPMU.jps
      settings:
        mode: subdir

  install-wordpress:
    - install: ${baseUrl}/scripts/installWP.jps
      settings:
        db_host: ${globals.db_host}
        db_user: ${globals.db_user}
        db_pass: ${globals.db_pass}
        wp_admin_pass: ${globals.wp_admin_pass}
        wp_title: "Hello World"
        wp_url: ${globals.protocol}://${globals.domain}/
        
  glusterfsMount:
    - cmd[${this}]: |-
        yum install glusterfs-fuse -y &>> /var/log/run.log;
        sed -i 's/[^[:space:]][^[:space:]]*/-fstype=glusterfs/2' /etc/autofs.jelastic &>> /var/log/run.log;
        service autofs restart;
      user: root
      
  glusterAllowClient:
    - forEach(i:nodes.storage):
        cmd[${@i.id}]: gluster volume set data auth.allow "*"

  setupCP:
    - log: CP OPTIMIZATION
    - install: https://raw.githubusercontent.com/jelastic/templates/master/config_v2.jps?_r=${fn.random}
      settings:
        targetGroup: cp
        targetNodes: ${this.nodeId}
        optimization: wordpress
    - cmd[${this.nodeId}]: |-
        sed -i "s/zend_extension.*/; zend_extension=opcache.so/" /usr/local/lsws/lsphp/etc/php.d/10-opcache.ini;
        sed -i "s/opcache.enable.*/; opcache.enable=0/" /usr/local/lsws/lsphp/etc/php.d/10-opcache.ini;
        if test -f /usr/local/sbin/optimization.sh; then bash /usr/local/sbin/optimization.sh &>> /var/log/run.log; fi
    - if (/litespeed/.test("${nodes.cp.nodeType}")):
      - cmd[${this.nodeId}]: jem passwd set -p ${globals.ls_admin_pass}
        user: root
    - if ('${settings.glusterfs}' == 'true'):
        - glusterAllowClient: ${this.nodeIP}
        - glusterfsMount: ${this.nodeId}
        
  addHSTS:
    - if (/nginxphp/.test("${nodes.cp.nodeType}")):
        cmd[${this.nodeId}]: |-
          sed -i "s/#add_header Strict-Transport-Security/add_header Strict-Transport-Security/" /etc/nginx/conf.d/sites_enabled/default.conf;
          sudo jem service restart;
    - if (/litespeed/.test("${nodes.cp.nodeType}")):
        cmd[${nodes.cp.master.id}]:
          if [[ $(grep -L "Strict-Transport-Security" /var/www/webroot/ROOT/.htaccess) ]]; then echo "$(echo 'Header always set Strict-Transport-Security "max-age=31536000"' | cat - /var/www/webroot/ROOT/.htaccess)" > /var/www/webroot/ROOT/.htaccess; fi
  
  setupBL:
    - log: LB OPTIMIZATION
    - install: https://raw.githubusercontent.com/jelastic/templates/master/config_v2.jps?_r=${fn.random}
      settings:
        targetGroup: bl
        targetNodes: ${this.nodeId}
        optimization: wordpress
    - cmd[${this.nodeId}]: if test -f /usr/local/sbin/optimization.sh; then bash /usr/local/sbin/optimization.sh &>> /var/log/run.log; fi
    - if (/litespeed/.test("${nodes.bl.nodeType}")):
      - install: ${baseUrl}/scripts/setupHA4LB.jps?_r=${fn.random}
      - cmd[${this.nodeId}]: jem passwd set -p ${globals.ls_admin_pass}
        user: root

  mountStorage:
    - log: Mount Storage
    - api:
      - method: jelastic.environment.file.AddMountPointByGroup
        params:
          nodeGroup: cp
          sourceNodeId: ${nodes.storage.master.id}
          sourcePath: /data
          path: /var/www/webroot/ROOT
          sourceAddressType: NODE_GROUP
          protocol: NFS4
    
